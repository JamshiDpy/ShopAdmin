openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /product/:
    get:
      operationId: product_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - product
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: product_create
      tags:
      - product
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /product/{id}/:
    get:
      operationId: product_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - product
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: product_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - product
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: product_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - product
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: product_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - product
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /product/category/:
    get:
      operationId: product_category_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - product
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: product_category_create
      tags:
      - product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /product/category/{id}/:
    get:
      operationId: product_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - product
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: product_category_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: product_category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: product_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - product
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /shop/:
    get:
      operationId: shop_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - shop
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
          description: ''
    post:
      operationId: shop_create
      tags:
      - shop
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopCreate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopCreate'
          description: ''
  /shop/{id}/:
    get:
      operationId: shop_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this shop.
        required: true
      tags:
      - shop
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    put:
      operationId: shop_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this shop.
        required: true
      tags:
      - shop
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopCreate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopCreate'
          description: ''
    patch:
      operationId: shop_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this shop.
        required: true
      tags:
      - shop
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShop'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    delete:
      operationId: shop_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this shop.
        required: true
      tags:
      - shop
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /user/:
    get:
      operationId: user_list
      tags:
      - user
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /user/{id}/:
    get:
      operationId: user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - user
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: user_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - user
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /user/login/:
    post:
      operationId: user_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /user/registration/:
    post:
      operationId: user_registration_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        parent:
          type: string
          format: uuid
          nullable: true
      required:
      - id
      - title
    PatchedCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        parent:
          type: string
          format: uuid
          nullable: true
    PatchedProduct:
      type: object
      properties:
        category:
          type: string
          format: uuid
        shop:
          type: array
          items:
            type: string
            format: uuid
        name:
          type: string
          maxLength: 250
        description:
          type: string
        amount:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        price:
          type: number
          format: double
        image:
          type: array
          items:
            type: string
            format: uri
        active:
          type: boolean
        number_of_orders:
          type: integer
          readOnly: true
          nullable: true
    PatchedShop:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        description:
          type: string
        image:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
    Product:
      type: object
      properties:
        category:
          type: string
          format: uuid
        shop:
          type: array
          items:
            type: string
            format: uuid
        name:
          type: string
          maxLength: 250
        description:
          type: string
        amount:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        price:
          type: number
          format: double
        image:
          type: array
          items:
            type: string
            format: uri
        active:
          type: boolean
        number_of_orders:
          type: integer
          readOnly: true
          nullable: true
      required:
      - amount
      - category
      - description
      - image
      - name
      - number_of_orders
      - price
      - shop
    Registration:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password1:
          type: string
          maxLength: 32
          minLength: 8
        password2:
          type: string
          maxLength: 32
          minLength: 8
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
      required:
      - password1
      - password2
      - user_type
      - username
    Shop:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        description:
          type: string
        image:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - id
      - name
    ShopCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        description:
          type: string
        image:
          type: string
          format: uri
      required:
      - description
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
      required:
      - id
      - user_type
      - username
    UserTypeEnum:
      enum:
      - product_admin
      - shop_admin
      type: string
      description: |-
        * `product_admin` - Productadmin
        * `shop_admin` - Shopadmin
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
